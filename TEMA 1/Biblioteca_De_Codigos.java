import java.util.Scanner;

public class "nombre" {
	public static void main(String[] args) {
		Scanner lector = new Scanner (System.in); // esto es la intro para java



AquÃ­ tienes los apuntes reorganizados y simplificados para que sean mÃ¡s claros y concisos:

### Tipos de variables:
int numeroEntero = 2;             // NÃºmeros enteros
float numeroDecimal = 2.5f;       // NÃºmeros con decimales (se usa "f")
double numeroDecimalLargo = 2.5;  // NÃºmeros con decimales largos
String texto = "Hola mundo";      // Cadena de caracteres
char letra = 'a';                 // CarÃ¡cter Ãºnico
boolean condicion = true;         // Verdadero o falso
```

---

### Operadores matemÃ¡ticos:
b = a++;  // Incremento al final
b = ++a;  // Incremento al inicio
b = a--;  // Decremento al final
b = --a;  // Decremento al inicio
b += a;   // Suma y asigna
b -= a;   // Resta y asigna
b *= a;   // Multiplica y asigna
b /= a;   // Divide y asigna
b %= a;   // Residuo de la divisiÃ³n
```

---

### Operadores condicionales:
==  // Igual
!=  // Diferente
>   // Mayor
>=  // Mayor o igual
<   // Menor
<=  // Menor o igual
&&  // Y (ambas condiciones verdaderas)
||  // O (una condiciÃ³n verdadera)
!   // NegaciÃ³n (invierte el valor lÃ³gico)
```

---

### Estructuras de control:
#### Condicionales:
if (condicion) {
    // CÃ³digo si la condiciÃ³n es verdadera
} else if (otraCondicion) {
    // CÃ³digo si la primera condiciÃ³n es falsa y esta es verdadera
} else {
    // CÃ³digo si ninguna condiciÃ³n es verdadera
}


#### Bucles:
for (int i = 0; i <= 10; i++) {
    // Se repite mientras i <= 10
}

while (i < 10) {
    i++;  // Evitar bucle infinito
}


#### `switch` (evaluaciÃ³n de casos):
int edad;
switch (edad) {
    case 1:
        System.out.println("La edad es 1 aÃ±o");
        break;
    case 2:
        System.out.println("La edad es 2 aÃ±os");
        break;
    default:
        // CÃ³digo para valores no contemplados
        break;
}


---

### Resumen de operadores lÃ³gicos:
- **`!`**: Niega el valor lÃ³gico (`!true` â†’ `false`).
- **`&&`**: Verdadero si ambas condiciones son verdaderas (`true && true` â†’ `true`).
- **`||`**: Verdadero si al menos una condiciÃ³n es verdadera (`true || false` â†’ `true`).

---

Este formato reduce redundancias y presenta los conceptos de manera mÃ¡s directa y comprensible. ðŸš€